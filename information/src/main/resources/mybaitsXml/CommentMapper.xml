<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdxm.information.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="com.sdxm.information.entity.Comment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="info_id" jdbcType="INTEGER" property="infoId"/>
        <result column="open_id" jdbcType="VARCHAR" property="openId"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="audit" jdbcType="INTEGER" property="audit"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
    <where>
        <foreach collection="oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
    <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </where>
    </sql>
    <sql id="Base_Column_List">
    id, info_id, open_id, comment, create_time, audit, update_time
  </sql>
    <select id="selectByExample" parameterType="com.sdxm.information.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
        distinct
    </if>
        <include refid="Base_Column_List"/>
    from info_comment
    <if test="_parameter != null">
        <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
        order by ${orderByClause}
    </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from info_comment
    where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from info_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.sdxm.information.entity.CommentExample">
    delete from info_comment
    <if test="_parameter != null">
        <include refid="Example_Where_Clause"/>
    </if>
    </delete>
    <insert id="insert" parameterType="com.sdxm.information.entity.Comment">
    insert into info_comment (id, info_id, open_id,
      comment, create_time, audit,
      update_time)
    values (#{id,jdbcType=INTEGER}, #{infoId,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR},
      #{comment,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{audit,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.sdxm.information.entity.Comment">
    insert into info_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
            id,
        </if>
        <if test="infoId != null">
            info_id,
        </if>
        <if test="openId != null">
            open_id,
        </if>
        <if test="comment != null">
            comment,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
        <if test="audit != null">
            audit,
        </if>
        <if test="updateTime != null">
            update_time,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
            #{id,jdbcType=INTEGER},
        </if>
        <if test="infoId != null">
            #{infoId,jdbcType=INTEGER},
        </if>
        <if test="openId != null">
            #{openId,jdbcType=VARCHAR},
        </if>
        <if test="comment != null">
            #{comment,jdbcType=VARCHAR},
        </if>
        <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="audit != null">
            #{audit,jdbcType=INTEGER},
        </if>
        <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
        </if>
    </trim>
    </insert>
    <select id="countByExample" parameterType="com.sdxm.information.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from info_comment
    <if test="_parameter != null">
        <include refid="Example_Where_Clause"/>
    </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update info_comment
    <set>
        <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
        </if>
        <if test="record.infoId != null">
            info_id = #{record.infoId,jdbcType=INTEGER},
        </if>
        <if test="record.openId != null">
            open_id = #{record.openId,jdbcType=VARCHAR},
        </if>
        <if test="record.comment != null">
            comment = #{record.comment,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.audit != null">
            audit = #{record.audit,jdbcType=INTEGER},
        </if>
        <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
    </set>
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause"/>
    </if>
    </update>
    <update id="updateByExample" parameterType="map">
    update info_comment
    set id = #{record.id,jdbcType=INTEGER},
    info_id = #{record.infoId,jdbcType=INTEGER},
    open_id = #{record.openId,jdbcType=VARCHAR},
        comment = #{record.comment,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        audit = #{record.audit,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause"/>
    </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sdxm.information.entity.Comment">
    update info_comment
    <set>
        <if test="infoId != null">
            info_id = #{infoId,jdbcType=INTEGER},
        </if>
        <if test="openId != null">
            open_id = #{openId,jdbcType=VARCHAR},
        </if>
        <if test="comment != null">
            comment = #{comment,jdbcType=VARCHAR},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="audit != null">
            audit = #{audit,jdbcType=INTEGER},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sdxm.information.entity.Comment">
    update info_comment
    set info_id = #{infoId,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit = #{audit,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="queryByLike" parameterType="hashmap" resultType="com.sdxm.information.entity.Comment">
        select b.summary,b.type,a.id,a.`comment`,a.audit,a.create_time as createTime,c.mobile as phone,c.nick_name as
        nickName from info_comment
        a,information b,sys_employee c
        <where>
            a.info_id = b.id and a.open_id = c.open_id
            <if test="audit != null">
                and a.audit = #{audit}
            </if>
            <if test="param != null">
                and (b.summary like concat('%',#{param},'%')
                or a.comment like concat('%',#{param},'%'))
            </if>
        </where>
        order by a.id desc
    </select>
</mapper>