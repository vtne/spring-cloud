<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdxm.information.dao.InformationMapper">
  <resultMap id="BaseResultMap" type="com.sdxm.information.entity.Information">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="type" jdbcType="VARCHAR" property="type"/>
    <result column="logo_image" jdbcType="VARCHAR" property="logoImage"/>
    <result column="summary" jdbcType="VARCHAR" property="summary"/>
    <result column="detail" jdbcType="VARCHAR" property="detail"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="sequence" jdbcType="INTEGER" property="sequence"/>
    <result column="audit" jdbcType="INTEGER" property="audit"/>
    <result column="scan_num" jdbcType="INTEGER" property="scanNum"/>
    <result column="scan_num_custom" jdbcType="INTEGER" property="scanNumCustom"/>
    <result column="up_wall" jdbcType="INTEGER" property="upWall"/>
    <result column="up_time" jdbcType="TIMESTAMP" property="upTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, logo_image, summary, detail, create_time, update_time, sequence, audit, 
    scan_num, scan_num_custom, up_wall, up_time
  </sql>
  <select id="selectByExample" parameterType="com.sdxm.information.entity.InformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdxm.information.entity.InformationExample">
    delete from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdxm.information.entity.Information">
    insert into information (id, type, logo_image, 
      summary, detail, create_time, 
      update_time, sequence, audit, 
      scan_num, scan_num_custom, up_wall, 
      up_time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{logoImage,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sequence,jdbcType=INTEGER}, #{audit,jdbcType=INTEGER}, 
      #{scanNum,jdbcType=INTEGER}, #{scanNumCustom,jdbcType=INTEGER}, #{upWall,jdbcType=INTEGER}, 
      #{upTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sdxm.information.entity.Information">
    insert into information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="logoImage != null">
        logo_image,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="audit != null">
        audit,
      </if>
      <if test="scanNum != null">
        scan_num,
      </if>
      <if test="scanNumCustom != null">
        scan_num_custom,
      </if>
      <if test="upWall != null">
        up_wall,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="logoImage != null">
        #{logoImage,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="audit != null">
        #{audit,jdbcType=INTEGER},
      </if>
      <if test="scanNum != null">
        #{scanNum,jdbcType=INTEGER},
      </if>
      <if test="scanNumCustom != null">
        #{scanNumCustom,jdbcType=INTEGER},
      </if>
      <if test="upWall != null">
        #{upWall,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdxm.information.entity.InformationExample"
          resultType="java.lang.Long">
    select count(*) from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.logoImage != null">
        logo_image = #{record.logoImage,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sequence != null">
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.audit != null">
        audit = #{record.audit,jdbcType=INTEGER},
      </if>
      <if test="record.scanNum != null">
        scan_num = #{record.scanNum,jdbcType=INTEGER},
      </if>
      <if test="record.scanNumCustom != null">
        scan_num_custom = #{record.scanNumCustom,jdbcType=INTEGER},
      </if>
      <if test="record.upWall != null">
        up_wall = #{record.upWall,jdbcType=INTEGER},
      </if>
      <if test="record.upTime != null">
        up_time = #{record.upTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information
    set id = #{record.id,jdbcType=INTEGER},
    type = #{record.type,jdbcType=VARCHAR},
    logo_image = #{record.logoImage,jdbcType=VARCHAR},
    summary = #{record.summary,jdbcType=VARCHAR},
    detail = #{record.detail,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    sequence = #{record.sequence,jdbcType=INTEGER},
    audit = #{record.audit,jdbcType=INTEGER},
    scan_num = #{record.scanNum,jdbcType=INTEGER},
    scan_num_custom = #{record.scanNumCustom,jdbcType=INTEGER},
    up_wall = #{record.upWall,jdbcType=INTEGER},
    up_time = #{record.upTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdxm.information.entity.Information">
    update information
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="logoImage != null">
        logo_image = #{logoImage,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="audit != null">
        audit = #{audit,jdbcType=INTEGER},
      </if>
      <if test="scanNum != null">
        scan_num = #{scanNum,jdbcType=INTEGER},
      </if>
      <if test="scanNumCustom != null">
        scan_num_custom = #{scanNumCustom,jdbcType=INTEGER},
      </if>
      <if test="upWall != null">
        up_wall = #{upWall,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdxm.information.entity.Information">
    update information
    set type = #{type,jdbcType=VARCHAR},
      logo_image = #{logoImage,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sequence = #{sequence,jdbcType=INTEGER},
      audit = #{audit,jdbcType=INTEGER},
      scan_num = #{scanNum,jdbcType=INTEGER},
      scan_num_custom = #{scanNumCustom,jdbcType=INTEGER},
      up_wall = #{upWall,jdbcType=INTEGER},
      up_time = #{upTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>